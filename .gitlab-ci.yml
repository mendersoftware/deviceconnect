variables:
  DOCKER_REPOSITORY: mendersoftware/deviceconnect
  # Setup containers to use docker dind service
  DOCKER_HOST: "tcp://docker:2376"
  DOCKER_CERT_PATH: "/certs/client"
  DOCKER_TLS_VERIFY: 1

  DOCKER_TLS_CERTDIR: "/certs" # Where docker:dind should generate certs

stages:
  - test
  - build
  - publish

include:
  - project: 'Northern.tech/Mender/mendertesting'
    file: '.gitlab-ci-check-golang-lint.yml'
  - project: 'Northern.tech/Mender/mendertesting'
    file: '.gitlab-ci-check-golang-unittests.yml'
  - project: 'Northern.tech/Mender/mendertesting'
    file: '.gitlab-ci-check-apidocs.yml'
  - project: 'Northern.tech/Mender/mendertesting'
    file: '.gitlab-ci-check-commits.yml'
  - project: 'Northern.tech/Mender/mendertesting'
    file: '.gitlab-ci-check-license.yml'
  - project: 'Northern.tech/Mender/mendertesting'
    file: '.gitlab-ci-github-status-updates.yml'
  - project: 'Northern.tech/Mender/mendertesting'
    file: '.gitlab-ci-check-docker-build.yml'

test:unit:
  image: golang:1.15
  needs: []
  services:
    - name: mongo:4.4
      alias: mender-mongo
  variables:
    DEVICECONNECT_MONGO_URL: "mongodb://mender-mongo"

test:acceptance:
  stage: test
  needs: []
  except:
    - /^saas-[a-zA-Z0-9.-]+$/
  tags:
    - docker
  image: docker:19.03.13
  services:
    - name: docker:19.03.13-dind
      alias: docker
  before_script:
    - apk add docker-compose make
  script:
    - make acceptance-tests
  after_script:
    - make acceptance-tests-logs
    - make acceptance-tests-down
  artifacts:
    expire_in: 2w
    paths:
      - tests/acceptance.*
      - tests/coverage-acceptance.txt
    when: always

publish:acceptance:
  stage: publish
  except:
    - /^saas-[a-zA-Z0-9.-]+$/
  image: golang:1.15
  needs:
    - job: test:acceptance
      artifacts: true
  before_script:
    - GO111MODULE=off go get github.com/mattn/goveralls
    # Coveralls env variables:
    #  According to https://docs.coveralls.io/supported-ci-services
    #  we should set CI_NAME, CI_BUILD_NUMBER, etc. But according
    #  to goveralls source code (https://github.com/mattn/goveralls)
    #  many of these are not supported. Set CI_BRANCH, CI_PR_NUMBER,
    #  and pass few others as command line arguments.
    #  See also https://docs.coveralls.io/api-reference
    - export CI_BRANCH=${CI_COMMIT_BRANCH}
    - export CI_PR_NUMBER=${CI_COMMIT_BRANCH#pr_}
  script:
    - goveralls
      -repotoken ${COVERALLS_TOKEN}
      -service gitlab-ci
      -jobid $CI_PIPELINE_ID
      -covermode atomic
      -flagname acceptance
      -parallel
      -coverprofile ./tests/coverage-acceptance.txt
