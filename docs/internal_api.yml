openapi: 3.0.3

info:
  title: Device connect
  description: |
    Internal API for managing persistent device connections.
    Intended for use by the web GUI.
  version: "1"

servers:
  - url: http://mender-deviceconnect:8080/api/internal/v1/deviceconnect

tags:
  - name: Internal API

paths:
  /health:
    get:
      tags:
        - Internal API
      summary: Get health status of service
      operationId: Check Health
      responses:
        204:
          description: Service is healthy.
        400:
          description: Invalid Request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /alive:
    get:
      tags:
        - Internal API
      summary: Get service liveliness status.
      operationId: Check Liveliness
      responses:
        204:
          description: Service is up and serving requests.
        500:
          description: Internal Server Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /tenants/{tenantId}/devices:
    post:
      tags:
        - Internal API
      operationId: Provision device
      summary: Register a new device with the deviceconnect service.
      parameters:
        - in: path
          name: tenantId
          schema:
            type: string
          required: true
          description: ID of tenant the device belongs to.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Device'
      responses:
        201:
          description: Device was provisioned successfully.
        400:
          $ref: '#/components/responses/InvalidRequestError'
        500:
          $ref: '#/components/responses/InternalServerError'

  /tenants/{tenantId}/devices/{deviceId}:
    delete:
      tags:
        - Internal API
      operationId: Decomission device
      summary: Remove a device from the deviceconnect service.
      parameters:
        - in: path
          name: tenantId
          schema:
            type: string
          required: true
          description: ID of tenant the device belongs to.
        - in: path
          name: deviceId
          schema:
            type: string
          required: true
          description: ID of the target device.
      responses:
        202:
          description: Device was deleted successfully
        500:
          $ref: '#/components/responses/InternalServerError'

  /tenants/{tenantId}/devices/{deviceId}/check-update:
    post:
      tags:
        - Internal API
      operationId: Check Update
      summary: Trigger check-update for the Mender client running on the device 
      parameters:
        - in: path
          name: tenantId
          schema:
            type: string
          required: true
          description: ID of tenant the device belongs to.
        - in: path
          name: deviceId
          required: true
          schema:
            type: string
          description: ID for the target device.
      responses:
        202:
          description: Accepted
        400:
          $ref: '#/components/responses/InvalidRequestError'
        404:
          description: Device not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        409:
          description: Device not connected.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          $ref: '#/components/responses/InternalServerError'

  /tenants/{tenantId}/devices/{deviceId}/send-inventory:
    post:
      tags:
        - Internal API
      operationId: Send Inventory
      summary: Trigger send-inventory for the Mender client running on the device 
      parameters:
        - in: path
          name: tenantId
          schema:
            type: string
          required: true
          description: ID of tenant the device belongs to.
        - in: path
          name: deviceId
          required: true
          schema:
            type: string
          description: ID for the target device.
      responses:
        202:
          description: Accepted
        400:
          $ref: '#/components/responses/InvalidRequestError'
        404:
          description: Device not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        409:
          description: Device not connected.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          $ref: '#/components/responses/InternalServerError'

components:

  schemas:
    Error:
      type: object
      properties:
        error:
          type: string
          description: Description of the error.
        request_id:
          type: string
          description:
            Request ID passed with the request X-MEN-RequestID header
            or generated by the server.
      description: Error descriptor.
      example:
        error: "<error description>"
        request_id: "eed14d55-d996-42cd-8248-e806663810a8"

    NewTenant:
      type: object
      properties:
        tenant_id:
          type: string
          description: ID of new tenant.
      required:
        - tenant_id

    Device:
      type: object
      properties:
        device_id:
          type: string
          format: uuid
          description: ID of the new device.
      required:
        - device_id


  responses:
    InternalServerError:
      description: Internal Server Error.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            error: "internal error"
            request_id: "eed14d55-d996-42cd-8248-e806663810a8"

    InvalidRequestError:
      description: Invalid Request.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            error: "bad request parameters"
            request_id: "eed14d55-d996-42cd-8248-e806663810a8"
